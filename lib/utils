#!/bin/bash

cartridge_type="python-2.7"

#  Ensure home directory sourced in.
[ -z "$OPENSHIFT_HOMEDIR" ]  &&  source ~/.env/OPENSHIFT_HOMEDIR

#  Setup variables.
python27_dir=${OPENSHIFT_HOMEDIR}/$cartridge_type
python27_binary=$python27_dir/opt/bin/python
virtenv_dir=$python27_dir/virtenv

#  Add the python2.7 shared library to the load path.
export LD_LIBRARY_PATH="${python27_dir}/opt/lib:${LD_LIBRARY_PATH}"


#
#  Utility functions to create/update, delete, activate and make relocatable
#  the python-2.7 virtualenv. 
#

function create_virtualenv() {
   pushd "$virtenv_dir" > /dev/null

   # Hack to fix symlink on rsync issue
   /bin/rm -f lib64
   virtualenv -p $python27_binary --system-site-packages "$virtenv_dir"

   popd > /dev/null

}  #  End of function  create_virtualenv. 


function delete_virtualenv() {
   rm -rf $python27_dir/virtenv/*

}  #  End of function  delete_virtualenv. 


function activate_virtualenv() {
   source "$virtenv_dir/bin/activate"

}  #  End of function  activate_virtualenv. 


function make_virtualenv_relocatable() {
   virtualenv --relocatable ~/$cartridge_type/virtenv

}  #  End of function  make_virtualenv_relocatable.


#
#  Misc utility functions - get pod cartridge name/directory, add/remove
#  environment variables and extract package files.
#

function get_pod_cartridge_name() {
   #  FIXME: do this more generically using an env var or something.
   echo "community-pod-0.1"

}  #  End of function  get_pod_cartridge_name.


function get_pod_cartridge_dir() {
   echo "${OPENSHIFT_HOMEDIR}/$(get_pod_cartridge_name)/"

}  #  End of function  get_pod_cartridge_dir.


function _name_to_env_var_name() {
   echo "$1" | sed 's/[^A-Za-z0-9_]/_/g' | tr '[:lower:]' '[:upper:]'

}  #  End of function  _convert_name_to_env_var_name.


function add_cartridge_env_var() {
   [ -n "$1" ]  ||  return 1
   name=$(_name_to_env_var_name "$1")
   value=$2

   echo "$value" > "${OPENSHIFT_HOMEDIR}/$cartridge_type/.env/$name"

}  #  End of function  add_cartridge_env_var.


function remove_cartridge_env_var() {
   [ -n "$1" ]  ||  return 1
   name=$(_name_to_env_var_name "$1")
   cart_dir=${OPENSHIFT_HOMEDIR}/$cartridge_type

   [ -f "$cart_dir/.env/$name" ]  &&  rm -f $cart_dir/.env/$name

}  #  End of function  remove_cartridge_env_var.


function extract_package_files() {
   [ -d "$1" ]  ||  return 1

   #  In place extract the tarball files -- supports .tgz, .tar.gz, .tar and
   #  zip files and in that order.
   pushd "$1" > /dev/null

   for f in `ls *.tgz *.tar.gz`; do
      tar -zxf "$f"
   done

   for f in `ls *.tar`; do
      tar -xf "$f"
   done

   for f in `ls *.zip`; do
      unzip "$f"
   done

   popd > /dev/null

}  #  End of function  extract_package_files.


